name: Secure EC2 Deployment (Amazon Linux)

on:
  push:
    branches:
      - master

env:
  EC2_SSH_PORT: 2222  # SSH 포트 변경 반영
  EC2_DEPLOY_DIR: /home/${{ secrets.USERNAME }}/deploy
  EC2_LOG_FILE: app.log

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Prepare SSH Environment
        run: |
          KEY_PATH="$HOME/ec2-deploy-key.pem"
          echo "${{ secrets.SSH_KEY }}" | base64 -d > $KEY_PATH
          chmod 600 $KEY_PATH

          # SSH 포트 2222에 대한 known_hosts 등록
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} -p ${{ env.EC2_SSH_PORT }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

          # 키 검증 (Amazon Linux 2 호환성 확인)
          if ! ssh-keygen -y -f $KEY_PATH >/dev/null; then
            echo "::error::SSH Key validation failed"
            exit 1
          fi

      - name: Transfer JAR via SCP
        run: |
          scp -i $HOME/ec2-deploy-key.pem \
              -P ${{ env.EC2_SSH_PORT }} \  # SCP 포트 지정
              -o ConnectTimeout=30 \
              build/libs/spring-app.jar \
              ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ env.EC2_DEPLOY_DIR }}/

      - name: Deploy Application
        run: |
          ssh -i $HOME/ec2-deploy-key.pem \
              -p ${{ env.EC2_SSH_PORT }} \  # SSH 포트 지정
              ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
          set -ex

          # 프로세스 관리 개선 (Amazon Linux systemd 호환)
          sudo systemctl stop spring-app.service || true
          sleep 5

          # 로그 관리 (기존 설정 유지)
          ls -t $EC2_DEPLOY_DIR/app.log.* 2>/dev/null | tail -n +5 | xargs rm -f
          mv $EC2_DEPLOY_DIR/app.log $EC2_DEPLOY_DIR/app.log.$(date +%Y%m%d%H%M%S) 2>/dev/null || true

          # Swap 메모리 활성화 (t2.micro 최적화)
          sudo swapon /swapfile

          # 애플리케이션 실행
          nohup java -jar $EC2_DEPLOY_DIR/spring-app.jar > $EC2_DEPLOY_DIR/app.log 2>&1 &

          # 헬스 체크 강화
          timeout 120 bash -c '
            until curl -sSf http://localhost:8080/actuator/health >/dev/null; do
              sleep 10
            done
          ' || (tail -n 100 $EC2_DEPLOY_DIR/app.log && exit 1)

          echo "Deployment successful!"
          EOF

      - name: Cleanup
        run: |
          rm -f $HOME/ec2-deploy-key.pem
          rm -rf ~/.ssh/
