name: Manual Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Prepare SSH Key
        run: |
          # Base64로 인코딩된 키 디코딩
          echo "${{ secrets.SSH_KEY }}" | base64 -d > deploy-key.pem
          chmod 600 deploy-key.pem
          # Known hosts 등록 (최초 연결 시 yes 입력 방지)
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Transfer JAR via SCP
        run: |
          scp -i deploy-key.pem \
              -o StrictHostKeyChecking=no \
              build/libs/spring-app.jar \
              ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/deploy/

      - name: Deploy Application
        run: |
          ssh -i deploy-key.pem \
              -o StrictHostKeyChecking=no \
              ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
          cd /home/${{ secrets.USERNAME }}/deploy
          
          # 기존 프로세스 그레이스풀 종료
          CURRENT_PID=$(pgrep -f spring-app.jar)
          if [ -n "$CURRENT_PID" ]; then
            kill -15 $CURRENT_PID
            sleep 10
          fi
          
          # 이중 실행 방지를 위한 잔여 프로세스 제거
          pkill -9 -f spring-app.jar || true
          
          # 새 버전 배포
          nohup java -jar spring-app.jar > app.log 2>&1 &
          
          # 헬스 체크 (30초 타임아웃)
          timeout 30 bash -c 'until curl -s http://localhost:8080/actuator/health; do sleep 2; done'
          
          # 로그 최근 50줄 출력
          tail -n 50 app.log
          EOF

      - name: Cleanup
        run: rm -f deploy-key.pem
